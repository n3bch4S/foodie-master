generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Restaurant {
  id          String  @id @default(uuid())
  name        String
  description String?
  logoKey     String?
  ownerId     String

  FoodItem           FoodItem[]
  SessionTransaction SessionTransaction[]
  Site               Site?
}

model FoodItem {
  id           String  @id @default(uuid())
  name         String
  category     String
  price        Decimal
  imageKey     String?
  isActive     Boolean @default(true)
  restaurantId String

  Restaurant Restaurant @relation(fields: [restaurantId], references: [id])
  Order      Order[]

  @@index([restaurantId])
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}

model SessionTransaction {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  isOpen       Boolean  @default(true)
  restaurantId String

  Restaurant Restaurant @relation(fields: [restaurantId], references: [id])
  Order      Order[]

  @@index([restaurantId])
}

model Order {
  id                   String      @id @default(uuid())
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt
  status               OrderStatus @default(PENDING)
  quantity             Int
  foodItemId           String
  sessionTransactionId String

  FoodItem           FoodItem           @relation(fields: [foodItemId], references: [id])
  SessionTransaction SessionTransaction @relation(fields: [sessionTransactionId], references: [id])

  @@index([foodItemId])
  @@index([sessionTransactionId])
}

model Site {
  id           String @id @default(uuid())
  name         String
  restaurantId String @unique

  Restaurant Restaurant @relation(fields: [restaurantId], references: [id])
  Page       Page[]

  @@index([restaurantId])
}

enum PageType {
  HOME
  ORDER
  CUSTOM
}

model Page {
  id     String   @id @default(uuid())
  name   String
  type   PageType
  dom    Json
  siteId String

  site Site @relation(fields: [siteId], references: [id])

  @@index([siteId])
}
